[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://dckby00i8gbx7"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ajnoj"]
parameter_name = "Tint"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ckt7x"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_334se"]
size = Vector2(620, 360)
expression = "transPos = worldPos + triplanar_offset;
transPos = transPos / triplanar_scale;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2ytcd"]
input_name = "inv_view_matrix"

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_ajnoj"]
parameter_name = "Albedo"
texture_filter = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ss8v7"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_6gebl"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Albedo : filter_nearest;
uniform vec4 Tint : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// Input:4
	mat4 n_out4p0 = INV_VIEW_MATRIX;


// Input:5
	vec3 n_out5p0 = VERTEX;


// TransformVectorMult:6
	vec3 n_out6p0 = (n_out4p0 * vec4(n_out5p0, 1.0)).xyz;


	vec3 n_out37p0;
// Expression:37
	n_out37p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out37p0 = n_out6p0 + triplanar_offset;
		n_out37p0 = n_out37p0 / triplanar_scale;
	}


// TextureParameterTriplanar:40
	vec4 n_out40p0 = triplanar_texture(Albedo, triplanar_power_normal, n_out37p0);


// ColorParameter:32
	vec4 n_out32p0 = Tint;


// VectorOp:33
	vec4 n_out33p0 = n_out40p0 * n_out32p0;


// Output:0
	ALBEDO = vec3(n_out33p0.xyz);


}
"
nodes/fragment/0/position = Vector2(1000, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_2ytcd")
nodes/fragment/4/position = Vector2(-940, 340)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_ss8v7")
nodes/fragment/5/position = Vector2(-980, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeTransformVecMult_6gebl")
nodes/fragment/6/position = Vector2(-680, 360)
nodes/fragment/32/node = SubResource("VisualShaderNodeColorParameter_ajnoj")
nodes/fragment/32/position = Vector2(300, 520)
nodes/fragment/33/node = SubResource("VisualShaderNodeVectorOp_ckt7x")
nodes/fragment/33/position = Vector2(640, 380)
nodes/fragment/37/node = SubResource("VisualShaderNodeExpression_334se")
nodes/fragment/37/position = Vector2(-440, 360)
nodes/fragment/37/size = Vector2(620, 360)
nodes/fragment/37/input_ports = "0,4,worldPos;"
nodes/fragment/37/output_ports = "0,4,transPos;"
nodes/fragment/37/expression = "transPos = worldPos + triplanar_offset;
transPos = transPos / triplanar_scale;"
nodes/fragment/40/node = SubResource("VisualShaderNodeTextureParameterTriplanar_ajnoj")
nodes/fragment/40/position = Vector2(240, 140)
nodes/fragment/connections = PackedInt32Array(4, 0, 6, 0, 5, 0, 6, 1, 33, 0, 0, 0, 32, 0, 33, 1, 40, 0, 33, 0, 6, 0, 37, 0, 37, 0, 40, 1)
